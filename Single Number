Problem statement:
You are given an array A of length N, where N is always an odd integer. There are (N-1)/2 elements in the array that occur twice and one element which occurs once.
Your task is to find the only element that occurs once in the array.
Note: There are (N-1)/2+1 elements that are unique in the array.
Example:
Consider the array be 1,6,4,6,2,4,2
The integers 2, 4, 6 occur twice and only the integer 1 occurs once. 


#include <bits/stdc++.h> 
int occursOnce(vector<int> &a, int n){
	sort(a.begin(), a.end());
	for(int i =0;i<n;i+=2){
        if (a[i]!=a[i+1]){
            return a[i];
        }

    }
}
